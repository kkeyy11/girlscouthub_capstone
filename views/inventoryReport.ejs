<%- include('./layouts/header') %>
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Comprehensive Inventory Report</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <style>
    body { background: #f4f7fa; }
    .report-title { font-weight: bold; color: #2e7d32; }

    /* ✅ Custom Buttons */
    .btn-custom {
      padding: 0.5rem 1rem;
      font-size: 0.9rem;
      font-weight: 600;
      border-radius: 8px;
      transition: all 0.2s ease-in-out;
      box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }
    .btn-back {
      background: #e0e0e0;
      color: #333;
    }
    .btn-back:hover {
      background: #d5d5d5;
      color: #000;
      transform: translateY(-2px);
    }
    .btn-save {
      background: #2e7d32;
      color: #fff;
    }
    .btn-save:hover {
      background: #256828;
      transform: translateY(-2px);
    }

    .btn-group { gap: 0.6rem; }

    /* ✅ Status text only (no colored box) */
    .status {
      font-size: .85rem;
      font-weight: 600;
      background: none !important;
      padding: 0 !important;
      border-radius: 0 !important;
    }
    .status-in-stock { color: #2e7d32; }
    .status-low { color: #f57c00; }
    .status-out { color: #c62828; }

    .pagination button.active { background: #2e7d32; color: #fff; }

    /* ✅ Print Styling (Portrait, Table Only, Centered & Smaller) */
    @media print {
      @page { 
        size: A4 portrait; 
        margin: 8mm;
      }

      body { 
        background: #fff !important; 
        font-size: 10px; 
        display: flex;
        justify-content: center;
        align-items: flex-start;
      }

      /* Hide non-table elements */
      .btn-group,
      #pagination,
      .card,
      #searchInput,
      #filterCategory,
      #filterDate,
      .report-title,
      .border-bottom { 
        display: none !important; 
      }

      .container {
        margin: 0 auto !important;
        padding: 0 !important;
        max-width: 95% !important;
      }

      .table { 
        border-collapse: collapse !important; 
        width: 100% !important; 
        table-layout: fixed !important; 
        font-size: 9px !important;
      }
      .table th, .table td { 
        border: 1px solid #000 !important; 
        padding: 3px 4px !important; 
        word-break: break-word !important;
        white-space: normal !important;
        text-align: left;
      }

      /* ✅ Status plain black text on print */
      .status {
        font-size: 9px !important; 
        color: #000 !important;
      }
    }
  </style>
</head>
<body>
  <div class="container py-4">
    <!-- ✅ Header -->
    <div class="d-flex justify-content-between align-items-center border-bottom pb-3 mb-3">
      <h1 class="report-title h3"><i class="fas fa-boxes me-2"></i> Inventory Report</h1>
      <div class="btn-group">
        <a href="/manage-products" class="btn btn-custom btn-back">
          <i class="fas fa-arrow-left me-1"></i> Back
        </a>
        <button id="printBtn" class="btn btn-custom btn-save">
          <i class="fas fa-file-pdf me-1"></i> Save / Print PDF
        </button>
      </div>
    </div>

    <!-- ✅ Category Set -->
    <%
      const _catSet = {};
      (inventory || []).forEach(it => { if (it && it.category) _catSet[it.category] = true; });
      const _cats = Object.keys(_catSet);
    %>

    <!-- ✅ Filters -->
    <div class="card shadow-sm mb-3">
      <div class="card-body row g-3">
        <div class="col-md-4">
          <input type="text" id="searchInput" class="form-control" placeholder="🔍 Search inventory...">
        </div>
        <div class="col-md-4">
          <select id="filterCategory" class="form-select">
            <option value="all">📂 All Categories</option>
            <% _cats.forEach(cat => { %>
              <option value="<%= cat %>"><%= cat %></option>
            <% }) %>
          </select>
        </div>
        <div class="col-md-4">
          <select id="filterDate" class="form-select">
            <option value="all">📅 All Dates</option>
            <option value="today">📅 Today</option>
            <option value="week">📅 This Week</option>
            <option value="month">📅 This Month</option>
          </select>
        </div>
      </div>
    </div>

    <!-- ✅ Inventory Table -->
    <% if (inventory && inventory.length > 0) { %>
      <div class="table-responsive shadow-sm">
        <table id="inventoryTable" class="table table-hover align-middle">
          <thead class="table-success text-dark">
            <tr>
              <th>Item Name</th>
              <th>Category</th>
              <th>Quantity</th>
              <th>Status</th>
              <th>Unit Price (₱)</th>
              <th>Total Value (₱)</th>
              <th>Last Updated</th>
              <th>Date Added</th>
            </tr>
          </thead>
          <tbody>
            <% inventory.forEach(item => { 
              let totalValue = item.price * item.quantity;
              let stockStatus = item.quantity === 0 ? 'out' : (item.quantity < 10 ? 'low' : 'in-stock');
            %>
              <tr data-category="<%= item.category %>" 
                  data-name="<%= item.name %>" 
                  data-created="<%= item.createdAt ? item.createdAt.toISOString() : '' %>">
                <td><%= item.name %></td>
                <td><%= item.category %></td>
                <td><%= item.quantity %></td>
                <td>
                  <% if (stockStatus === 'in-stock') { %>
                    <span class="status status-in-stock">In Stock</span>
                  <% } else if (stockStatus === 'low') { %>
                    <span class="status status-low">Low Stock</span>
                  <% } else { %>
                    <span class="status status-out">Out of Stock</span>
                  <% } %>
                </td>
                <td>₱<%= item.price.toFixed(2) %></td>
                <td>₱<%= totalValue.toFixed(2) %></td>
                <td><%= item.updatedAt ? item.updatedAt.toLocaleDateString() : '' %></td>
                <td><%= item.createdAt ? item.createdAt.toLocaleDateString() : '' %></td>
              </tr>
            <% }) %>
          </tbody>
        </table>
      </div>
      <div class="d-flex justify-content-center my-3" id="pagination"></div>
    <% } else { %>
      <div class="text-center py-5">
        <i class="fas fa-box-open fa-3x text-muted"></i>
        <h3 class="mt-3">No Inventory Data</h3>
        <p class="text-muted">Add new items to start tracking your inventory.</p>
      </div>
    <% } %>
  </div>

  <!-- ✅ Scripts -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
  <script>
    document.addEventListener("DOMContentLoaded", function () {
      const searchInput = document.getElementById("searchInput");
      const filterCategory = document.getElementById("filterCategory");
      const filterDate = document.getElementById("filterDate");
      const table = document.getElementById("inventoryTable");
      if (!table) return;
      const rows = Array.from(table.querySelectorAll("tbody tr"));
      const pagination = document.getElementById("pagination");
      const rowsPerPage = 10;
      let currentPage = 1;

      function displayTable() {
        let start = (currentPage - 1) * rowsPerPage;
        let end = start + rowsPerPage;
        rows.forEach((row, i) => {
          row.style.display = (i >= start && i < end) ? "" : "none";
        });
      }

      function setupPagination() {
        pagination.innerHTML = "";
        let pageCount = Math.ceil(rows.length / rowsPerPage);

        let prevBtn = document.createElement("button");
        prevBtn.className = "btn btn-outline-success btn-sm me-1";
        prevBtn.innerText = "Previous";
        prevBtn.disabled = currentPage === 1;
        prevBtn.onclick = () => { if (currentPage > 1) { currentPage--; displayTable(); setupPagination(); } };
        pagination.appendChild(prevBtn);

        for (let i = 1; i <= pageCount; i++) {
          let btn = document.createElement("button");
          btn.className = "btn btn-sm " + (i === currentPage ? "btn-success" : "btn-outline-success");
          btn.innerText = i;
          btn.onclick = () => { currentPage = i; displayTable(); setupPagination(); };
          pagination.appendChild(btn);
        }

        let nextBtn = document.createElement("button");
        nextBtn.className = "btn btn-outline-success btn-sm ms-1";
        nextBtn.innerText = "Next";
        nextBtn.disabled = currentPage === pageCount;
        nextBtn.onclick = () => { if (currentPage < pageCount) { currentPage++; displayTable(); setupPagination(); } };
        pagination.appendChild(nextBtn);
      }

      function filterTable() {
        const searchValue = searchInput.value.toLowerCase();
        const categoryValue = filterCategory.value;
        const dateValue = filterDate.value;
        const today = new Date();

        rows.forEach(row => {
          const rowCategory = row.getAttribute("data-category");
          const rowName = row.getAttribute("data-name")?.toLowerCase() || "";
          const createdAt = new Date(row.getAttribute("data-created"));

          let matchCategory = (categoryValue === "all" || rowCategory === categoryValue);
          let matchSearch = rowName.includes(searchValue);

          let matchDate = true;
          if (dateValue === "today") {
            matchDate = createdAt.toDateString() === today.toDateString();
          } else if (dateValue === "week") {
            let weekStart = new Date(today);
            weekStart.setDate(today.getDate() - today.getDay());
            let weekEnd = new Date(weekStart);
            weekEnd.setDate(weekStart.getDate() + 6);
            matchDate = createdAt >= weekStart && createdAt <= weekEnd;
          } else if (dateValue === "month") {
            matchDate = createdAt.getMonth() === today.getMonth() && createdAt.getFullYear() === today.getFullYear();
          }

          row.style.display = (matchCategory && matchSearch && matchDate) ? "" : "none";
        });
      }

      searchInput.addEventListener("keyup", filterTable);
      filterCategory.addEventListener("change", filterTable);
      filterDate.addEventListener("change", filterTable);

      displayTable();
      setupPagination();

      document.getElementById("printBtn").addEventListener("click", () => {
        window.print();
      });
    });
  </script>
</body>
</html>
